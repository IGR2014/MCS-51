; Про таймер: счётчик TH0:TL0 инкрементируется в каждом машинном цикле, т.е. через каждые 12 периодов колебаний кварцевого резонатора.
; Значит, период колебаний таймера составляет 1/12 от частоты генератора. У нас в иммитации частота 12 МГц, значит, таймер будет
; тикать с частотой 1МГц т.е. 1 миллион раз в секунду. Нам по условию нужно сделать 10 миллисекунд, а это в 10000 раз медленне.
; Значит таймер будет отсчитывать 10000 тиков.
; Тогда 65535 (максимальное значение счётчика таймера, оно же 0xFFFF) - 10000 = 55535. Это начальное значение счётчика таймера
; Переведём в HEX - будет 0xD8EF. Его и запишем в TH0:TL0

; Смещение в памяти - 0h
org	0h
	; Прыжок к основной программе
	ajmp	START

; Смещение в памяти - 30h
org	30h
; Основная программа
START:
	; Настройка теймера на режим работы M1 (16-битный общий счётчик)
	mov		TMOD,	#00000001B
	; Запоминание в памяти данных для 4 интервалов (десять 8-разрядных слов т.к. нужно выводить 12 сигналов (т.е. нужно 12 бит))
	; Их значения не заданы в условии - поэтому выбираем любые:
	mov		3,		#00000111B
	mov		4,		#00000000B
	mov		5,		#00111000B
	mov		6,		#00000000B
	mov		7,		#11000000B
	mov		8,		#00000001B
	mov		9,		#00000000B
	mov		10,		#00001110B
	; Сброс таймера №0
	clr		TR0
; Начало работы программы
BEG:
	; Если в P1.0 значение логического "0" - возврат в начало программы
	jnb		P1.0,	BEG
; Начальные настройки интервалов
WAIT:
	; В регистр R1 заносится адрес первого значения 8-разрядных слов
	mov		R1,		#3
	; В регистр R2 заносится количество временных интервалов - 4
	mov		R2,		#4
; Повторение вывода всех импульсов
NNN:
	; Вывод импульсов в порт P2
	mov		P2,		@R1
	; Переход к следущему байту
	inc		R1
	; Вывод импульсов в порт P3
	mov		P3,		@R1
; Настрйока таймера №0 на 10000 тиков (см. текст в начале)
; В 16-ричной системе это будет 0xD8EF
WAIT1:
	; Старший байт счётчика таймера
	mov		TH0,	#0D8H
	; Младший байт счётчика таймера
	mov		TL0,	#0EFH
	; Запуск таймера №0
	setb	TR0
; Ожидание пока таймер №0 отработает
WAIT2:
	; Таймер отработал - выход из цикла
	jnb		TF0,	EXIT
	; Возврат к ожиданию
	sjmp	WAIT2
; Конец работы с таймером
EXIT:
	; Остановка таймера
	clr		TR0
	; Переход к следующему значению в массиве в памяти
	inc		R1
	; Декремент значения в регистре R2. Если прошли все девять - возврат в начало отправки последовательности сигналов
	djnz	R2,		NNN
	; Прыжок в начало основной программы
	sjmp	BEG
; Конец программы
end
