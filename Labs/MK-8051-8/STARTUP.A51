; В качестве порта ввода/вывода используется P1
; Бит P1.0 - для последовательной передачи упаковааного числа (младшим битом перёд)
; Бит P1.1 - индикатор от внешнего устройства о том что приём начался (низкий уровень)
; Бит P1.2 - индикатор от контроллера о том что данные переданы успешно (низкий уровень)
; В регистре общего назначения R0 начальный адрес массива
; Длина массива - его первая цифра

; Адрес 0x00
org 0h
	; Переход к началу основной программы
	ajmp    BEGIN

; Адрес 0x30
org 30h
; Основная программа
BEGIN:
	; Начальная настройка порта P1
	; Бит P1.1 на вход, бит P1.2 в высокий уровень, остальные на выход
	mov     P1, #00000110b
	; Вычитка из памяти размера массива в регистр A
	mov     A, @R0
	; Запоминание размера массива в регистре R1
	mov     R1, A
; Метка места отправки массива
WRITE:
    ; Переход к следующему значению массива
	inc     R0
	; Вычитка из памяти очередного байта передаваемого массива чисел в регистр A
	mov     A, @R0
	; Отправка массива
	acall   SEND
	; Декремент значения в регистре общего назначения R1 и
	; переход к отправке данных в случае, если там не 0
	djnz    R1, WRITE
	; Возврат в начало основной программы
	ajmp    BEGIN

; Функция отправки данных
SEND:
	; Счётчик записываемых байт (4) в регистр общего назначения R2
	mov     R2, #4
; Цикл записи
OUT:
	; Ожидание инициализации отправки от ВУ (должен прийти низкий уровень на бит P1.1)
	jb      P1.1, $
	; Инициация приёма от контроллера (выставление бита P1.2 в низкий уровень)
	clr     P1.2
	; Сдвиг рагистра аккумулятора на 1 бит вправо с использованием флага переноса C
	rrc		A
	; Приём данных из порта P1 в флаг переноса регистра аккумулятора
	mov     P1.0, C
	; Ожидание завершения отправки от ВУ (должен появиться высокий уровень на бите P1.1)
	jnb		P1.1, $
	; Завершение приёма от контроллера (выставление бита P1.2 в высокий уровень)
	setb    P1.2
	; Декремент значения в регистре общего назначения R2 и
	; переход к приёму следующего бита в случае, если там не 0
	djnz	R2, OUT
	; Выход из функции
	ret

; Конец основной программы
end
