ORG 0000H
	SJMP MAIN

; Початок програми
MAIN:
	MOV R0, #ARRAY_SIZE ; Встановити кількість проходів зовнішнього циклу в R0
	MOV R1, #ARRAY      ; Встановити початкову адресу масиву в R1
	ACALL SORT          ; Виклик підпрогрмаи сортування
	; Кінець програми
    SJMP $  ; Безкінечний цикл для завершення програми

; Підпрограма сортування
SORT:
; Зовнішній цикл
LOOP_OUTER:
	MOVX A, @R0         ; Зберегти залишок проходів у A
    MOV R2, A           ; Копіювати залишок проходів у R3 для зовнішнього циклу
    MOV R3, A           ; Копіювати залишок проходів у R3 для внутрішнього циклу
; Внутрішній цикл
LOOP_INNER:
    MOVX A, @R1         ; Зчитати поточний елемент масиву в A
    MOV B, A            ; Зберегти поточний елемент у B
    INC R1              ; Перейти до наступного елемента
    MOVX A, @R1         ; Зчитати наступний елемент масиву в A
    CLR C               ; Очистити прапорець переносу для операції віднімання
    MOV R4, A           ; Зберегти наступний елемент у R2
    SUBB A, B           ; Відняти поточний елемент (B) від наступного елемента (A)
    JNC NOEXCHG         ; Якщо результат позитивний (A > B), пропустити обмін
    MOV A, B            ; Інакше зберегти поточний елемент (B) у A
    MOVX @R1, A         ; Записати значення A в поточну позицію R1 (обмін)
    DEC DPL             ; Повернутися на одну позицію назад
    MOV A, R3           ; Завантажити збережений наступний елемент у A
    MOVX @R1, A         ; Записати його на попередню позицію (обмін)
    INC R1              ; Перейти до наступного елемента
; Наступний елемент
NOEXCHG:
    DJNZ R2, LOOP_INNER ; Зменшити лічильник внутрішнього циклу та повторити, якщо не нуль
    DJNZ R0, LOOP_OUTER ; Зменшити лічильник зовнішнього циклу та повторити, якщо не нуль
    RET                 ; Завершити підпрограму


ORG 00F0H

; Масив для сортування
ARRAY:
    DB 2, 5, 1, 9, 7, 6 ; Початкові значення масиву
ARRAY_SIZE:
	DB $ - ARRAY        ; Розмір масиву

END