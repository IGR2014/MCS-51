ORG 0000H
	SJMP START

; Визначення змінних
SUM_LOW  EQU 0H  ; Молодший байт суми
SUM_HIGH EQU 0H  ; Старший байт суми

; Початок програми
START:  
    MOV DPTR, #0C050H  ; Встановити вказівник даних на початок масиву
    MOV R0, #12        ; Встановити R0 як лічильник елементів (довжина масиву)
    CLR A              ; Очистити акумулятор
    MOV SUM_LOW, A     ; Очистити SUM_LOW
    MOV SUM_HIGH, A    ; Очистити SUM_HIGH
; Обробка наступного елементу
NEXT_ELEMENT:
    MOVC A, @A+DPTR    ; Завантажити поточний елемент масиву
    MOV B, A           ; Зберегти поточний елемент у B для додавання
    ; Додавання поточного елемента до молодшого байта суми
    ADD A, SUM_LOW     ; Додати поточний елемент до молодшого байта суми
    MOV SUM_LOW, A     ; Зберегти нове значення молодшого байта суми
    ; Перевірити перенесення у старший байт суми
    MOV A, B           ; Повернути значення поточного елемента до A
    ADDC A, #00H       ; Додати поточний елемент до старшого байта суми з урахуванням перенесення
    MOV A, SUM_HIGH    ; Завантажити старший байт суми
    ADDC A, #00H       ; Додати перенесення, якщо було
    MOV SUM_HIGH, A    ; Зберегти нове значення старшого байта суми
    INC DPTR           ; Перейти до наступного елементу масиву
    DJNZ R0, NEXT_ELEMENT ; Повторювати, поки не будуть оброблені всі елементи масиву
    ; Кінець програми
    SJMP $  ; Бескінечний цикл для завершення програми
END