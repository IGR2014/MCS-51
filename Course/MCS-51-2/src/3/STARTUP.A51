ORG 0000H

START:
    MOV DPTR, #ARRAY   ; Завантажити адресу масиву в регістр DPTR
    MOV R0, DPL        ; Завантажити молодший байт адреси в R0
    MOV R1, #ARRAY_SIZE ; Завантажити розмір масиву в R1

    ACALL SORT_ARRAY   ; Виклик підпрограми сортування

    SJMP $            ; Зациклення програми, щоб вона не завершувалася

ARRAY:
    DB 5, 3, 8, 4, 1, 7 ; Ваш масив даних
ARRAY_SIZE EQU 6        ; Розмір масиву

SORT_ARRAY:
    MOV R2, #0       ; ініціалізація лічильника зовнішнього циклу
outer_loop:
	MOV A, R1
    MOV R3, A        ; ініціалізація лічильника внутрішнього циклу
    DEC R3           ; максимальне значення для внутрішнього циклу
inner_loop:
    MOV A, @R0       ; завантаження поточного елементу масиву в аккумулятор
    INC R0           ; перехід до наступного елементу масиву
    MOV B, @R0       ; завантаження наступного елементу масиву в регістр B
    CLR C            ; скидання флагу переносу для порівняння
    SUBB A, B        ; порівняння двох елементів
    JC not_swap      ; якщо A < B, переходимо до not_swap
    MOV @R0, A       ; обмін елементів місцями
    DEC R0           ; повернення до попереднього елементу масиву
    MOV @R0, B       ; переміщення елементу B на місце елемента A
    INC R0           ; перехід до наступного елементу масиву
not_swap:
    DJNZ R3, inner_loop ; перевірка умови завершення внутрішнього циклу
    INC R2               ; перехід до наступного елементу масиву
    DJNZ R1, outer_loop  ; перевірка умови завершення зовнішнього циклу
    RET                  ; повернення з підпрограми

	END